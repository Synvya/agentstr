from typing import Any, Dict, List, Optional, Union

from .nostr import Event, EventBuilder, Keys, Kind, Metadata, PublicKey, Timestamp

class EventId:
    @classmethod
    def parse(cls, hex_str: str) -> "EventId": ...

class Profile:
    def __init__(
        self, name: str, description: str, picture: str, nsec: Optional[str]
    ) -> None: ...
    def to_metadata(self) -> Metadata: ...

class ShippingMethod:
    def __init__(self, id: str, cost: int) -> None: ...
    def name(self, name: str) -> "ShippingMethod": ...
    def regions(self, regions: List[str]) -> "ShippingMethod": ...

class ShippingCost:
    def __init__(self, id: str, cost: int) -> None: ...

class StallData:
    def __init__(self, name: str, description: str) -> None: ...

class MerchantStall:
    def __init__(
        self,
        id: str,
        name: str,
        description: str,
        currency: str,
        shipping: List[ShippingMethod],
    ) -> None: ...
    def to_json(self) -> Dict[str, Any]: ...

class ProductData:
    def __init__(self, name: str, description: str) -> None: ...

class MerchantProduct:
    def __init__(
        self,
        id: str,
        stall_id: str,
        name: str,
        description: str,
        images: List[str],
        currency: str,
        price: int,
        quantity: int,
        shipping: List[ShippingCost],
        categories: Optional[List[str]] = None,
        specs: Optional[List[List[str]]] = None,
    ) -> None: ...
    def to_json(self) -> Dict[str, Any]: ...

class NostrClient:
    def __init__(self, relay_url: str, nsec: Optional[str] = None) -> None: ...
    def publish_profile(self, metadata: Metadata) -> EventId: ...
    def publish_stall(self, stall: MerchantStall) -> EventId: ...
    def publish_product(self, product: MerchantProduct) -> EventId: ...

class Merchant:
    def __init__(
        self,
        merchant_profile: Profile,
        relay: str,
        stalls: List[MerchantStall],
        products: List[MerchantProduct],
    ) -> None: ...
    def get_profile(self) -> str: ...
    def publish_profile(self) -> str: ...
    def get_stalls(self) -> str: ...
    def get_products(self) -> str: ...
    def publish_stall_by_name(self, name: Union[str, Dict[str, str]]) -> str: ...
    def publish_product_by_name(self, name: Union[str, Dict[str, str]]) -> str: ...
    def publish_products_by_stall_name(
        self, name: Union[str, Dict[str, str]]
    ) -> str: ...
    def publish_all_stalls(self) -> str: ...
    def publish_all_products(self) -> str: ...
