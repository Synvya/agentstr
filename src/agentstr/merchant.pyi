from typing import Any, List, Optional

from nostr_sdk import NostrClient  # type: ignore
from phi.tools import Toolkit

from agentstr.nostr import (  # NostrClient,
    AgentProfile,
    ProductData,
    ShippingCost,
    ShippingMethod,
    StallData,
)

class MerchantStall:
    stall: StallData
    def __init__(
        self,
        id: str,
        name: str,
        description: str,
        currency: str,
        shipping: List[ShippingMethod],
    ) -> None: ...
    def get_data(self) -> StallData: ...
    def name(self) -> str: ...

class MerchantProduct:
    product: ProductData
    def __init__(
        self,
        id: str,
        stall_id: str,
        name: str,
        description: str,
        images: List[str],
        currency: str,
        price: int,
        quantity: int,
        shipping: List[ShippingCost],
        categories: Optional[List[str]] = None,
        specs: Optional[List[List[str]]] = None,
    ) -> None: ...
    def get_data(self) -> ProductData: ...
    def name(self) -> str: ...

class Merchant(Toolkit):
    _nostr_client: NostrClient
    _profile: AgentProfile
    _stalls: List[MerchantStall]
    _products: List[MerchantProduct]

    def __init__(
        self,
        merchant_profile: AgentProfile,
        relay: str,
        stalls: List[MerchantStall],
        products: List[MerchantProduct],
    ) -> None: ...
    def get_profile(self) -> str: ...
    def get_relay(self) -> str: ...
    def get_products(self) -> str: ...
    def get_stalls(self) -> str: ...
    def publish_all_products(self) -> str: ...
    def publish_all_stalls(self) -> str: ...
    def publish_new_product(self, product: MerchantProduct) -> str: ...
    def publish_product_by_name(self, product_name: str) -> str: ...
    def publish_products_by_stall_name(self, stall_name: str) -> str: ...
    def publish_profile(self) -> str: ...
    def publish_new_stall(self, stall: MerchantStall) -> str: ...
    def publish_stall_by_name(self, stall_name: str) -> str: ...
    def remove_all_products(self) -> str: ...
    def remove_all_stalls(self) -> str: ...
    def remove_product_by_name(self, product_name: str) -> str: ...
    def remove_stall_by_name(self, stall_name: str) -> str: ...
    def get_event_id(self, response: Any) -> str: ...
